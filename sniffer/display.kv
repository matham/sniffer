#:kivy 1.8.1
#@PydevCodeAnalysisIgnore
#:import Factory kivy.factory.Factory
#:import rgb kivy.utils.get_color_from_hex


# the root level widget
<MainView@BoxLayout>:
    padding: 20
    ScrollView:
        scroll_type: ['bars']
        bar_width: 10
        GridLayout:
            cols: 1
            size_hint: None, None
            size: self.minimum_size
            spacing: [0, 30]
            GridLayout:
                size_hint: None, None
                size: self.minimum_size
                rows: 1
                spacing: [20, 0]
                padding: 20
                ExceptionDisplay
                SimulateButton
                StartWithConfig
                StopExperiment
                GridLayout:
                    width: self.minimum_width
                    size_hint_x: None
                    cols: 1
                    Label:
                        text: 'Filter'
                    Spinner:
                        values: ['Rat', 'Mouse']
                        text: 'Rat'
                        width: max([x.width for x in self._dropdown.children]) + 5
                        size_hint_x: None
                        on_text: app.filter_type = self.text
            GridLayout:
                cols: 1
                size_hint: None, None
                size: self.minimum_size
                on_parent: app.simulation_devices = self
                id: simulated_devices
                GridLayout:
                    id: odors
                    cols: 8
                    size_hint: None, None
                    size: self.minimum_size
            GridLayout:
                id: video
                rows: 1
                size_hint: None, None
                size: self.minimum_size
    GridLayout:
        id: boxes
        cols: 2


<BoxDisplay>:
    orientation: 'vertical'
    filter_type: app.filter_type
    ScrollView:
        size_hint_y: None
        height: animal_name.minimum_height + 20
        GridLayout:
            size_hint_x: None
            width: self.minimum_width
            rows: 1
            padding: [10, 5]
            spacing: 10
            ToggleButton:
                id: acquire
                text: 'Acquire'
                width: self.texture_size[0] + 10
                size_hint_x: None
                on_state: root.moas.box_stage.set_adc_state(self.state == 'down', root.__self__)
                disabled: not root.moas.box_stage.started
            Spinner:
                values: ['raw', 'filtered']
                text: 'filtered'
                on_text: root.plot_type = self.text
                width: 60
                size_hint_x: None
            Spinner:
                id: protocols
                values: moas.verify.odor_protocols.keys()
                width: max([x.width for x in self._dropdown.children]) + 20
                size_hint_x: None
                disabled: animal_name.disabled
            TextInput:
                id: animal_name
                width: 100
                multiline: False
                size_hint_x: None
                disabled: not root.moas.box_wait.started or root.moas.box_wait.finished
                on_text: root.moas.box_stage.animal_id = self.text
            Button:
                text: 'Start'
                width: self.texture_size[0] + 10
                size_hint_x: None
                id: start_btn
                disabled: animal_name.disabled or not protocols.text or protocols.text not in moas.verify.odor_protocols
            ToggleButton:
                text: ''
                background_down: 'play.png'
                background_normal: 'pause.png'
                width: self.height
                size_hint_x: None
                disabled: stop_btn.disabled
                on_state: root.moas.box_stage.pause() if self.state == 'down' else root.moas.box_stage.unpause()
            Button:
                text: 'Stop'
                width: self.texture_size[0] + 10
                size_hint_x: None
                id: stop_btn
                on_press: root.moas.box_stage.stop(stage=False)
                disabled: not root.moas.box_stage.started
            ToggleButton:
                text: 'Record'
                width: self.texture_size[0] + 10
                size_hint_x: None
                id: record_video
                on_state: root.moas.box_stage.record_video[root.moas.box_stage.box] = self.state == 'down'
                state: 'down' if root.moas.box_stage.record_video[root.moas.box_stage.box] else 'normal'
                disabled: root.moas.box_wait.finished or not root.moas.box_stage.video_player

    TimeLine:
        id: timer
    Graph:
        id: graph
        xlabel: 'Time'
        label_options: {'color': rgb('444444'), 'bold': True}
        background_color: rgb('000000')
        tick_color: rgb('808080')
        border_color: rgb('808080')
        x_grid: True
        y_grid: True
        x_grid_label: True
        y_grid_label: True
        x_ticks_minor: 5
        x_ticks_major: 1
        y_ticks_major: 0.1
        y_ticks_minor: 4
        ymax: 1
        ymin: -1
        xmax: 2
